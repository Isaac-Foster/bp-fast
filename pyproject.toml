[project]
name = "pb-fast"
version = "0.1.0"
requires-python = ">=3.12"
dependencies = [
    "alembic>=1.16.5",
    #"asyncmy>=0.2.10",
    "asyncpg>=0.30.0",
    "bcrypt>=5.0.0",
    "email-validator>=2.0.0",
    "fastapi>=0.119.0",
    "loguru>=0.7.3",
    "pillow>=12.0.0",
    "pre-commit>=4.3.0",
    "psycopg[binary]>=3.2.11",
    "pydantic>=2.12.0",
    "pydantic-settings>=2.11.0",
    "pyjwt>=2.10.1",
    "pyotp>=2.9.0",
    "pytest>=8.4.2",
    "pytest-asyncio>=1.2.0",
    "pytest-cov>=7.0.0",
    "python-multipart>=0.0.20",
    "qrcode>=8.2",
    "redis>=6.4.0",
    #"sqlalchemy[asyncio]>=2.0",
    "uuid6>=2025.0.1",
    "uvicorn>=0.37.0",
]

[dependency-groups]
dev = [
    "ruff>=0.14.0",
    "taskipy>=1.14.1",
]

[tool.taskipy.tasks]
format = "ruff check . --fix && ruff format ."
lint = "ruff check ."
start = "uvicorn src:app --reload"

test = "pytest --cov -vv"
post_test = "coverage html"
up = "docker compose up -d"
down = "docker compose down"

[tool.ruff]
line-length = 79
exclude = ["tests", ".venv", ".ruff_cache", "migrations", "pyproject.toml"]


[tool.lint]
select = ["E", "F", "Q", "I"]
fix = true
unsafe-fixes = false


[tool.ruff.format]
quote-style = "single"

[tool.ruff.lint]
ignore = ["SIM103", "E701", "E722", "F821"]


[tool.pytest.ini_options]
addopts = "-q --disable-warnings"
asyncio_mode = "auto"
asyncio_default_fixture_loop_scope = "function"
testpaths = ["backend/tests"]
pythonpath = ["."]
markers = [
    "asyncio: Mark a test as asyncio test."
]
